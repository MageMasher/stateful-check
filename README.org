#+TITLE: stateful-check

A [[http://clojure.org][Clojure]] library designed to help with testing stateful systems with
[[https://github.com/clojure/test.check/][test.check]].

#+BEGIN_HTML
<a href="http://clojars.org/org.clojars.czan/stateful-check">
  <img src="http://clojars.org/org.clojars.czan/stateful-check/latest-version.svg"
       alt="Clojars Project">
</a>
#+END_HTML

* Example

To see an example of ~stateful-check~ to test a simple system, see the
[[file:doc/queue.org][queue example in docs/]].

Of particular note is how a test is run and what happens if (or
really, when) it fails:
#+BEGIN_SRC clojure
  (is (specification-correct? queue-spec {:seed 1417059242645}))
  ;; 
  ;; FAIL in clojure.lang.PersistentList$EmptyList@1 (form-init1067629020891437332.clj:1)
  ;;    #<0> = (:new)     => #<Atom@53df198e: #<PersistentQueue clojure.lang.PersistentQueue@1>>
  ;;    #<2> = (:push #<0> 0)     => nil
  ;;    #<3> = (:pop #<0>)        => #<PersistentQueue clojure.lang.PersistentQueue@1>
  ;; Error while checking postcondition
  ;; Seed:  1417059242645
  ;; 
  ;; expected: :pass
  ;;   actual: :fail
#+END_SRC

* Specifications

For a detailed description of how a ~stateful-check~ specification has
to be structured, see [[file:doc/specification.org][the specification document]].

* Related work

- [[https://github.com/clojure/test.check/][test.check]] (generative testing for Clojure)
- [[http://www.quviq.com/index.html][QuviQ Quickcheck]] (commercial generative testing for Erlang)
- [[http://proper.softlab.ntua.gr/index.html][PropEr]] (open source generative testing for Erlang)

* Future work

- race-condition debugging (parallel test cases)

* License

Copyright Â© 2014 Carlo Zancanaro

Distributed under the Eclipse Public License either version 1.0 or (at
your option) any later version.
